// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: delay.proto

#ifndef PROTOBUF_delay_2eproto__INCLUDED
#define PROTOBUF_delay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace delayMessage {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_delay_2eproto();
void protobuf_AssignDesc_delay_2eproto();
void protobuf_ShutdownFile_delay_2eproto();

class DelayMsg;

// ===================================================================

class DelayMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:delayMessage.DelayMsg) */ {
 public:
  DelayMsg();
  virtual ~DelayMsg();

  DelayMsg(const DelayMsg& from);

  inline DelayMsg& operator=(const DelayMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelayMsg& default_instance();

  void Swap(DelayMsg* other);

  // implements Message ----------------------------------------------

  inline DelayMsg* New() const { return New(NULL); }

  DelayMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DelayMsg& from);
  void MergeFrom(const DelayMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DelayMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cmd = 100;
  void clear_cmd();
  static const int kCmdFieldNumber = 100;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // optional string str = 101;
  void clear_str();
  static const int kStrFieldNumber = 101;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional uint32 msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // optional double send_time = 2;
  void clear_send_time();
  static const int kSendTimeFieldNumber = 2;
  double send_time() const;
  void set_send_time(double value);

  // optional uint32 uav_id = 3;
  void clear_uav_id();
  static const int kUavIdFieldNumber = 3;
  ::google::protobuf::uint32 uav_id() const;
  void set_uav_id(::google::protobuf::uint32 value);

  // optional double lat = 4;
  void clear_lat();
  static const int kLatFieldNumber = 4;
  double lat() const;
  void set_lat(double value);

  // optional double lon = 5;
  void clear_lon();
  static const int kLonFieldNumber = 5;
  double lon() const;
  void set_lon(double value);

  // optional double alt = 6;
  void clear_alt();
  static const int kAltFieldNumber = 6;
  double alt() const;
  void set_alt(double value);

  // optional double vx = 7;
  void clear_vx();
  static const int kVxFieldNumber = 7;
  double vx() const;
  void set_vx(double value);

  // optional double vy = 8;
  void clear_vy();
  static const int kVyFieldNumber = 8;
  double vy() const;
  void set_vy(double value);

  // optional double vz = 9;
  void clear_vz();
  static const int kVzFieldNumber = 9;
  double vz() const;
  void set_vz(double value);

  // optional double x = 10;
  void clear_x();
  static const int kXFieldNumber = 10;
  double x() const;
  void set_x(double value);

  // optional double y = 11;
  void clear_y();
  static const int kYFieldNumber = 11;
  double y() const;
  void set_y(double value);

  // optional double z = 12;
  void clear_z();
  static const int kZFieldNumber = 12;
  double z() const;
  void set_z(double value);

  // optional double w = 13;
  void clear_w();
  static const int kWFieldNumber = 13;
  double w() const;
  void set_w(double value);

  // repeated uint32 state = 19;
  int state_size() const;
  void clear_state();
  static const int kStateFieldNumber = 19;
  ::google::protobuf::uint32 state(int index) const;
  void set_state(int index, ::google::protobuf::uint32 value);
  void add_state(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      state() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_state();

  // repeated double ct = 20;
  int ct_size() const;
  void clear_ct();
  static const int kCtFieldNumber = 20;
  double ct(int index) const;
  void set_ct(int index, double value);
  void add_ct(double value);
  const ::google::protobuf::RepeatedField< double >&
      ct() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_ct();

  // @@protoc_insertion_point(class_scope:delayMessage.DelayMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  double send_time_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 uav_id_;
  double lat_;
  double lon_;
  double alt_;
  double vx_;
  double vy_;
  double vz_;
  double x_;
  double y_;
  double z_;
  double w_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > state_;
  mutable int _state_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > ct_;
  mutable int _ct_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_delay_2eproto();
  friend void protobuf_AssignDesc_delay_2eproto();
  friend void protobuf_ShutdownFile_delay_2eproto();

  void InitAsDefaultInstance();
  static DelayMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DelayMsg

// optional string cmd = 100;
inline void DelayMsg::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelayMsg::cmd() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.cmd)
  return cmd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelayMsg::set_cmd(const ::std::string& value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.cmd)
}
inline void DelayMsg::set_cmd(const char* value) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:delayMessage.DelayMsg.cmd)
}
inline void DelayMsg::set_cmd(const char* value, size_t size) {
  
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:delayMessage.DelayMsg.cmd)
}
inline ::std::string* DelayMsg::mutable_cmd() {
  
  // @@protoc_insertion_point(field_mutable:delayMessage.DelayMsg.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelayMsg::release_cmd() {
  // @@protoc_insertion_point(field_release:delayMessage.DelayMsg.cmd)
  
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelayMsg::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    
  } else {
    
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:delayMessage.DelayMsg.cmd)
}

// optional string str = 101;
inline void DelayMsg::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelayMsg::str() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.str)
  return str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelayMsg::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.str)
}
inline void DelayMsg::set_str(const char* value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:delayMessage.DelayMsg.str)
}
inline void DelayMsg::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:delayMessage.DelayMsg.str)
}
inline ::std::string* DelayMsg::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:delayMessage.DelayMsg.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelayMsg::release_str() {
  // @@protoc_insertion_point(field_release:delayMessage.DelayMsg.str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelayMsg::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:delayMessage.DelayMsg.str)
}

// optional uint32 msg_id = 1;
inline void DelayMsg::clear_msg_id() {
  msg_id_ = 0u;
}
inline ::google::protobuf::uint32 DelayMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.msg_id)
  return msg_id_;
}
inline void DelayMsg::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.msg_id)
}

// optional double send_time = 2;
inline void DelayMsg::clear_send_time() {
  send_time_ = 0;
}
inline double DelayMsg::send_time() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.send_time)
  return send_time_;
}
inline void DelayMsg::set_send_time(double value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.send_time)
}

// optional uint32 uav_id = 3;
inline void DelayMsg::clear_uav_id() {
  uav_id_ = 0u;
}
inline ::google::protobuf::uint32 DelayMsg::uav_id() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.uav_id)
  return uav_id_;
}
inline void DelayMsg::set_uav_id(::google::protobuf::uint32 value) {
  
  uav_id_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.uav_id)
}

// optional double lat = 4;
inline void DelayMsg::clear_lat() {
  lat_ = 0;
}
inline double DelayMsg::lat() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.lat)
  return lat_;
}
inline void DelayMsg::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.lat)
}

// optional double lon = 5;
inline void DelayMsg::clear_lon() {
  lon_ = 0;
}
inline double DelayMsg::lon() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.lon)
  return lon_;
}
inline void DelayMsg::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.lon)
}

// optional double alt = 6;
inline void DelayMsg::clear_alt() {
  alt_ = 0;
}
inline double DelayMsg::alt() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.alt)
  return alt_;
}
inline void DelayMsg::set_alt(double value) {
  
  alt_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.alt)
}

// optional double vx = 7;
inline void DelayMsg::clear_vx() {
  vx_ = 0;
}
inline double DelayMsg::vx() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.vx)
  return vx_;
}
inline void DelayMsg::set_vx(double value) {
  
  vx_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.vx)
}

// optional double vy = 8;
inline void DelayMsg::clear_vy() {
  vy_ = 0;
}
inline double DelayMsg::vy() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.vy)
  return vy_;
}
inline void DelayMsg::set_vy(double value) {
  
  vy_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.vy)
}

// optional double vz = 9;
inline void DelayMsg::clear_vz() {
  vz_ = 0;
}
inline double DelayMsg::vz() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.vz)
  return vz_;
}
inline void DelayMsg::set_vz(double value) {
  
  vz_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.vz)
}

// optional double x = 10;
inline void DelayMsg::clear_x() {
  x_ = 0;
}
inline double DelayMsg::x() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.x)
  return x_;
}
inline void DelayMsg::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.x)
}

// optional double y = 11;
inline void DelayMsg::clear_y() {
  y_ = 0;
}
inline double DelayMsg::y() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.y)
  return y_;
}
inline void DelayMsg::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.y)
}

// optional double z = 12;
inline void DelayMsg::clear_z() {
  z_ = 0;
}
inline double DelayMsg::z() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.z)
  return z_;
}
inline void DelayMsg::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.z)
}

// optional double w = 13;
inline void DelayMsg::clear_w() {
  w_ = 0;
}
inline double DelayMsg::w() const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.w)
  return w_;
}
inline void DelayMsg::set_w(double value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.w)
}

// repeated uint32 state = 19;
inline int DelayMsg::state_size() const {
  return state_.size();
}
inline void DelayMsg::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::uint32 DelayMsg::state(int index) const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.state)
  return state_.Get(index);
}
inline void DelayMsg::set_state(int index, ::google::protobuf::uint32 value) {
  state_.Set(index, value);
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.state)
}
inline void DelayMsg::add_state(::google::protobuf::uint32 value) {
  state_.Add(value);
  // @@protoc_insertion_point(field_add:delayMessage.DelayMsg.state)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelayMsg::state() const {
  // @@protoc_insertion_point(field_list:delayMessage.DelayMsg.state)
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelayMsg::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:delayMessage.DelayMsg.state)
  return &state_;
}

// repeated double ct = 20;
inline int DelayMsg::ct_size() const {
  return ct_.size();
}
inline void DelayMsg::clear_ct() {
  ct_.Clear();
}
inline double DelayMsg::ct(int index) const {
  // @@protoc_insertion_point(field_get:delayMessage.DelayMsg.ct)
  return ct_.Get(index);
}
inline void DelayMsg::set_ct(int index, double value) {
  ct_.Set(index, value);
  // @@protoc_insertion_point(field_set:delayMessage.DelayMsg.ct)
}
inline void DelayMsg::add_ct(double value) {
  ct_.Add(value);
  // @@protoc_insertion_point(field_add:delayMessage.DelayMsg.ct)
}
inline const ::google::protobuf::RepeatedField< double >&
DelayMsg::ct() const {
  // @@protoc_insertion_point(field_list:delayMessage.DelayMsg.ct)
  return ct_;
}
inline ::google::protobuf::RepeatedField< double >*
DelayMsg::mutable_ct() {
  // @@protoc_insertion_point(field_mutable_list:delayMessage.DelayMsg.ct)
  return &ct_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace delayMessage

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_delay_2eproto__INCLUDED
